import readline from "readline";
import chalk from "chalk";
import qrcode from "qrcode";
import { config} from "./config.js";
import { iniciarBot} from "./jadibot-serbot.js";

// üé≤ Generador de c√≥digo de 8 d√≠gitos
const generarCodigo = () => Math.floor(10000000 + Math.random() * 90000000).toString();

// üéõÔ∏è Interfaz de consola
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const pregunta = (texto) => new Promise(resolve => rl.question(texto, resolve));

(async () => {
  console.clear();
  console.log(chalk.cyanBright(`üå∏ Bienvenida a ${config.nombreBot} v${config.version} üå∏`));
  console.log(chalk.magenta("Selecciona una opci√≥n:"));
  console.log(chalk.yellow("1Ô∏è‚É£ Generar c√≥digo de vinculaci√≥n"));
  console.log(chalk.green("2Ô∏è‚É£ Generar c√≥digo QR"));

  const opcion = await pregunta(chalk.bold.blue("\nüëâ Opci√≥n (1 o 2): "));

  if (opcion === "1") {
    const codigo = generarCodigo();
    console.log(chalk.bgMagenta("\nüîê C√≥digo generado:"), chalk.whiteBright(codigo));
    iniciarBot(codigo); // L√≥gica personalizada
} else if (opcion === "2") {
    const qrData = `${config.nombreBot}:${generarCodigo()}`;
    console.log(chalk.bgGreen("\nüì≤ Generando QR..."));
    qrcode.toString(qrData, { type: "terminal"}, (err, qr) => {
      if (err) return console.error("‚ùå Error al generar QR:", err);
      console.log(qr);
      iniciarBot(qrData); // L√≥gica personalizada
});
} else {
    console.log(chalk.red("\n‚ùå Opci√≥n inv√°lida. Ejecuta el script nuevamente."));
}

  rl.close();
})();
